#!/bin/sh
#//////////////////////////////////////////////////
#//DESLinux DSLoader.d :: System Loader
#//	(C)2014-2022 Dark Embedded Systems.
#//	http://xprj.net/
#//////////////////////////////////////////////////
PREVCNT=65535;

main(){
	load_boot_drivers_lite;
	register_dev scan
}

check_exec(){
	"${1}" --help
	[ "${?}" = '127' ] && {
		echo "${1} is not found." >&3
		exit 20;
	}
	return 0;
}

check_dependencies(){
	check_exec 'devmm2name'
	return 0;
}

register_dev(){
	# Using devtmpfs or already registered
	[ -e '/dev/null' ] && return 0;
	[ -e '/dev/zero' ] && return 0;

	# 'devManager' method (ROM after 2020/05/01)
	/DRoot/DarkSystem/bin/devManager ${1} && return 0;
	devManager ${1} && return 0;

	# 'devmm2name' method (ROM after 2019/05/01)
	DEVMM2NAME_MTDBLOCK_MAJOR=31 devmm2name ${1} && return 0;

	# Simple method (for MTD devices only)
	register_dev_mtd && return 0;

	return 127;
}

register_dev_mtd(){
	for d in /sys/block/mtdblock*; do
		DEV=`cat ${d}/dev`;
		eval mknod /dev/${d##/*/} b ${DEV//:/ } 2>/dev/null
	done

	# Check USB existence
	ls /sys/block/sd* >/dev/null 2>&1 || return 127;
	for d in /sys/block/sd*; do
		DEV=`cat ${d}/dev`;
		eval mknod /dev/${d##/*/} b ${DEV//:/ } 2>/dev/null

		for p in ${d}/sd*; do
			DEV=`cat ${p}/dev`;
			eval mknod /dev/${p##/*/} b ${DEV//:/ } 2>/dev/null
		done
	done
	return 0;
}

check_redetect_required(){
	local CNT=0;
	local IFS=$'\r\n';

	for m in `lsmod`; do
		CNT=$((CNT+1));
	done

	[ "${CNT}" = "${PREVCNT}" ] && {
		PREVCNT=${CNT};
		return 0;
	}

	PREVCNT=${CNT};
	return 1;
}

detect_and_load_devices(){
	for m in /sys/bus/*/devices/*/modalias; do
		modprobe `cat ${m}`
	done
}

load_drivers(){
	echo 'I: Loading drivers...'
	depmod -a

	while ! check_redetect_required; do
		detect_and_load_devices 
	done
}



detect_and_load_devices_lite(){
	/sbin/kmodloader

	for l in /lib/modules/*/*.ko; do
		l=${l##*/};
		modprobe "${l%%.*}"
	done

	return 0;
}

load_boot_drivers_lite(){
	echo "I: Loading drivers..."
	while ! check_redetect_required; do
		detect_and_load_devices_lite;
	done

	return 0;
}

main "${@}";

exit 0;

